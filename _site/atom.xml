<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Disembrangling Programming - Paul Craciunoiu</title>
 <link href="http://embrangler.com/atom.xml" rel="self"/>
 <link href="http://embrangler.com/"/>
 <updated>2012-01-25T21:27:20-08:00</updated>
 <id>http://embrangler.com/</id>
 <author>
   <name>Paul Craciunoiu</name>
   <email>paul@craciunoiu.net</email>
 </author>

 
 <entry>
   <title>SoWink: discontinued</title>
   <link href="http://embrangler.com/2012/01/sowink-discontinued"/>
   <updated>2012-01-24T00:00:00-08:00</updated>
   <id>http://embrangler.com/2012/01/sowink-discontinued</id>
   <content type="html">&lt;p&gt;This is the first post of a series of lessons and stories from doing my first company, SoWink Inc.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks to several SoWink team members for reviewing this post and providing valuable feedback.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id='recap'&gt;Recap&lt;/h2&gt;

&lt;p&gt;SoWink started in late January, 2011, when I, my brother Marius, and our CEO and friend Di Huang met to discuss an idea.&lt;/p&gt;

&lt;p&gt;Everything was going really well for a while. In the last few months, though, more and more challenges became apparent. We weren&amp;#8217;t getting enough traction, enough funding, and our product didn&amp;#8217;t feel like one single, cohesive piece. It didn&amp;#8217;t seem to solve the problem we sought out to solve: make &lt;a href='#sowinks_mission'&gt;meeting new people online&lt;/a&gt; safe, private, quick and fun. It didn&amp;#8217;t fulfill &lt;a href='#sowinks_vision_and_the_challenge_it_brought'&gt;our long-term vision&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;On January 20, 2012, about a year later, SoWink discontinued its service. In this post, I will explain our decision as best as possible, as I see it right now.&lt;/p&gt;

&lt;h2 id='reality_check'&gt;Reality check&lt;/h2&gt;

&lt;p&gt;I read that the first startup is almost inevitably a failure. That first-time entrepreneurs &lt;a href='http://www.businessinsider.com/why-some-startups-succeed-and-others-fail-10-fascinating-harvard-findings-2012-1?op=1'&gt;&amp;#8220;have only an 18% chance of succeeding&amp;#8221;&lt;/a&gt;. That mistakes often come in large numbers and problems appear to be obvious in retrospect.&lt;/p&gt;

&lt;p&gt;Ultimately, there comes a time when everything seems clear. After almost a year since its inception, it is clear to me now that SoWink would not have done well in the foreseeable future. We were missing the proper team dynamic and culture. Or, rather, we had it, but somehow lost it. And once you lose that, it&amp;#8217;s over.&lt;/p&gt;

&lt;p&gt;Startups are hard because making a successful product is hard. Because having a perfect team is hard. And even once you have the perfect team, maintaining a cultural balance is important - most of all, trust and openness.&lt;/p&gt;

&lt;h2 id='sowinks_mission'&gt;SoWink&amp;#8217;s mission&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;At SoWink, our mission is to provide the most exclusive social platform by empowering young people with a fun, safe and enriching dating experience throughout the world.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We lived by these values: working on SoWink was fun, and the product looked fun. Many of our users seemed to enjoy the values and the product. In a way, our mission sounds generic, but we liked to think that&amp;#8217;s because of the grand vision.&lt;/p&gt;

&lt;h2 id='the_dangers_of_a_grand_vision'&gt;The dangers of a grand vision&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;SoWinkâ€™s vision is to revolutionize your dating world by removing all preexisting stigmas etched by current online dating providers through fostering a safe, social and fun environment in which our users can confidently entrust.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Our vision was very much long-term. The goal was to be efficient at delivering - helping people meet, yet to avoid the fall-off from achieving any dating site&amp;#8217;s goal: people find a date, they leave. That&amp;#8217;s where the fun product and discounts come in: you stay on SoWink with your date because it&amp;#8217;s fun. Because we offer something for your relationship.&lt;/p&gt;

&lt;p&gt;The problem here is the challenge that our grand vision brought: how do you build a product that does all these things? How do you do it efficiently, quickly, cohesively? For a founding team of first-time entrepreneurs, we didn&amp;#8217;t make it easy on ourselves. We lacked focus and experience. We hired too many people too quickly. We set high expectations for growth.&lt;/p&gt;

&lt;p&gt;Could we have done it? Why so certain to give up?&lt;/p&gt;

&lt;h2 id='trust_and_confidence'&gt;Trust and confidence&lt;/h2&gt;

&lt;p&gt;Once I no longer could trust that we are going somewhere, I no longer felt that SoWink is my company. I lacked the confidence to go any further. We needed a culture change, a reality check, and the strength of mind to get back on the right path and find our balance again.&lt;/p&gt;

&lt;p&gt;From where I was standing, any right path seemed too far. Unreachable, almost. Sometimes, when you get so far off-track, getting back in the groove is simply not worth it. It&amp;#8217;s just like trust and relationships.&lt;/p&gt;

&lt;p&gt;Our CEO&amp;#8217;s market research had set high expectations for traction, growth, and future plans. Over time, those expectations were simply not met - there was something missing. I made the mistake of believing in those expectations, when I should have done more research and fewer assumptions.&lt;/p&gt;

&lt;p&gt;It took a long winter break to realize the stress and disbelief in what was actually happening. We had all been working so hard and wanting to believe that our product will succeed so much. I had forgotten to step away and do a reality check: our growth wasn&amp;#8217;t where it should have been; our funding wasn&amp;#8217;t around the corner and we needed it; our team was large and we had a responsibility towards them. Something had to change.&lt;/p&gt;

&lt;p&gt;I had a 6 hour meeting with my brother, and he was the one who really helped me face the facts: we had forgotten to be founders. We hadn&amp;#8217;t relaxed in a while, hadn&amp;#8217;t thought about the big picture, hadn&amp;#8217;t looked back to see that we weren&amp;#8217;t heading in the direction we assumed. We had fooled ourselves.&lt;/p&gt;

&lt;h2 id='the_importance_of_a_strong_team_and_balance'&gt;The importance of a strong team and balance&lt;/h2&gt;

&lt;p&gt;In times like these I understand why it is important to have full faith and trust in your team. To not let stress, or investors, or anyone else get in the way of your company&amp;#8217;s culture or balance. To discuss issues openly and early. To express concern and recognize when expectations are not met. To distribute responsibility and to avoid false reassurance. To be realistic.&lt;/p&gt;

&lt;p&gt;Much of our team had joined us too soon, before we had figured out our own culture, before we had found enough validation for our product. However, SoWink had a great team, and our exciting vision and product inspired everyone to work hard and contribute to the product in every aspect. The work we all did together was amazing. It made SoWink stand out, and the fact that we were able to maintain an enthusiastic team for so many months is an achievement in itself. It shows that we had some things right: an exciting product, fun values, and a vision that resonated with all of us. We had reached a team size of over 15, including part timers.&lt;/p&gt;

&lt;h2 id='the_good_news'&gt;The good news&lt;/h2&gt;

&lt;p&gt;The good news is that SoWink has been a success in its failure. Failing fast and clearly, rather than slow and uncertainly = much better. In startup life, a year flies by extremely quickly. Most of the successful companies that you know today have pivoted several times and failed for several years before becoming a huge success.&lt;/p&gt;

&lt;p&gt;I really do think that failing fast means learning fast. Which is not to say I am in favor of giving up. But, sometimes, it becomes clear that is the only option: everything seems to agree to it. A year was enough for us to understand that we&amp;#8217;re failing: it was slow enough to tell it&amp;#8217;s not going to work, but not too slow to have wasted months or years looking for something that wasn&amp;#8217;t there.&lt;/p&gt;

&lt;p&gt;For me personally, this year has been a long time to learn &lt;em&gt;a lot&lt;/em&gt;, but not so long that I feel sorry for not reaching this conclusion sooner.&lt;/p&gt;

&lt;p&gt;The other good news is that learning from this failure will better prepare us all for the future.&lt;/p&gt;

&lt;h2 id='thanks'&gt;Thanks&lt;/h2&gt;

&lt;p&gt;I (and our entire SoWink team) would like to thank all of our users for their dedication, support and feedback. Our friends and partners for believing in our product. And to anyone and everyone who has helped us along the way. Thank you!&lt;/p&gt;

&lt;p&gt;I personally would also like to thank our team for their passion and determination, and for their dedication to stick with us for so long and believe that we can succeed.&lt;/p&gt;

&lt;h2 id='links'&gt;Links&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://blog.sowink.com'&gt;SoWink blog&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://facebook.com/sowink'&gt;Our Facebook page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Belated birthday resolutions</title>
   <link href="http://embrangler.com/2012/01/belated-birthday-resolutions"/>
   <updated>2012-01-23T00:00:00-08:00</updated>
   <id>http://embrangler.com/2012/01/belated-birthday-resolutions</id>
   <content type="html">&lt;p&gt;I&amp;#8217;m over a month late on &lt;a href='http://embrangler.com/2010/12/belated-birthday-resolutions/#onward_i_say'&gt;my promise&lt;/a&gt;. But it can still be a tradition.&lt;/p&gt;

&lt;p&gt;Table of contents:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href='#why'&gt;Why?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='#thanks_previous_year'&gt;Thanks, previous year!&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href='#understand_my_place_on_the_web'&gt;Understand my place on the web&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#take_more_risks'&gt;Take more risks&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#take_more_steps_back_think_ahead'&gt;Take more steps back, think ahead&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#use_the_power_of_choice'&gt;Use the power of choice&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='#what_now'&gt;What now?&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href='#improve_social_life'&gt;Improve social life&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#eat_less_meat'&gt;Eat less meat&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#develop_management_leadership_skills'&gt;Develop management/leadership skills&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#learn_about_emerging_markets_and_ideas'&gt;Learn about emerging markets and ideas&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='#onward_i_say'&gt;Onward, I say!&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id='why'&gt;Why?&lt;/h2&gt;

&lt;p&gt;It&amp;#8217;s been a new year. And my birthday. In 2011, so much has changed that I could spend weeks just thinking about it, doing nothing else, and still learning from it.&lt;/p&gt;

&lt;p&gt;I &lt;a href='http://embrangler.com/2010/12/belated-birthday-resolutions/'&gt;wrote a similar post&lt;/a&gt; shortly after my last birthday, and I like the title so I&amp;#8217;m keeping it.&lt;/p&gt;

&lt;h2 id='thanks_previous_year'&gt;Thanks, previous year!&lt;/h2&gt;

&lt;p&gt;Looking back to the end of 2010, I had set out to fulfill 4 concrete goals:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Understand my place on the web&lt;/li&gt;

&lt;li&gt;Take more risks&lt;/li&gt;

&lt;li&gt;Take more steps back, think ahead&lt;/li&gt;

&lt;li&gt;Use the power of choice&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Time to grade myself :)&lt;/p&gt;

&lt;h2 id='1_understand_my_place_on_the_web'&gt;1. Understand my place on the web.&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Grade: D+&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I knew this was a stretch - I am still not sure where I want to be. In 2011, I moved from &lt;a href='http://mozilla.com'&gt;being a web developer at Mozilla&lt;/a&gt; to starting my own company, &lt;a href='http://sowink.com'&gt;SoWink&lt;/a&gt;. I learned that working for a social product is extremely fun. I recently increased my open source contributions to the web as a whole and am planning to continue this trend.&lt;/p&gt;

&lt;p&gt;But do I really understand where I want to be years from now? Or even this year? No. I&amp;#8217;m considering this goal a moderate success, but mostly &lt;strong&gt;a failure&lt;/strong&gt;. A failure from which I should be learning a lesson. What is that lesson? I&amp;#8217;ll have to think about it&amp;#8230;&lt;/p&gt;

&lt;h3 id='2_take_more_risks'&gt;2. Take more risks&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Grade: A-&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Definitely achieved. Starting a company, moving, traveling alone, going hang gliding.&lt;/p&gt;

&lt;p&gt;It would have been even better if I had taken more time to learn more about the non-technical essentials of running a company. But that would have taken time from something else, surely.&lt;/p&gt;

&lt;h3 id='3_take_more_steps_back_think_ahead'&gt;3. Take more steps back, think ahead&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Grade: B&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ve spent some time thinking about my future, life, and what matters. This is worth a separate blog post in itself. I&amp;#8217;m still not satisfied with my time perspective. I want to spend more time thinking about the big picture. I want to have a better grasp of the next few years, and maintain a better balance in my life.&lt;/p&gt;

&lt;p&gt;I want to thank the people closest to me for asking me thought-provoking questions throughout the year that have encouraged me to do this more.&lt;/p&gt;

&lt;h3 id='4_use_the_power_of_choice'&gt;4. Use the power of choice&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Grade: A&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;While I have still occasionally victimized myself, I understand now that it is difficult not to - especially when under heavy stress. But the past year has taught me to say no more, to negotiate better, to actively choose my path. Most of all, it has taught me that &lt;em&gt;I do&lt;/em&gt; have the power of choice, that &lt;em&gt;I can&lt;/em&gt; do what I want, and that grabbing an opportunity and making the most of it can really change one&amp;#8217;s life.&lt;/p&gt;

&lt;p&gt;Working at a startup, I have had to continually adjust my expectations, evaluate how the product has been going, how much work can really be done, become better at estimating and less worried about missing deadlines. I went through several failures, delayed launches, intense debates and arguments.&lt;/p&gt;

&lt;p&gt;Failing fast and often has taught me how to deal with stress better. It has the downside of not giving me enough time to think and learn from it, so I&amp;#8217;d like to take some time this month of January to think back more and jot down lessons learned.&lt;/p&gt;

&lt;h2 id='what_now'&gt;What now?&lt;/h2&gt;

&lt;p&gt;Since last year went so well, I&amp;#8217;m setting some stretch goals for this year, too.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href='#improve_social_life'&gt;Improve social life&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#eat_less_meat'&gt;Eat less meat&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#develop_managementleadership_skills'&gt;Develop management/leadership skills&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#learn_about_emerging_markets_and_ideas'&gt;Learn about emerging markets and ideas&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id='improve_social_life'&gt;Improve social life&lt;/h3&gt;

&lt;p&gt;I&amp;#8217;ve been living in the US for a long time now, and I&amp;#8217;ve yet to reach the social life that I want. I&amp;#8217;ve got some of everything, but not enough. My social network is not very responsive nor extremely well aligned with my values and goals. Obviously this is my fault and my responsibility. I want to change that.&lt;/p&gt;

&lt;p&gt;So, this year, I will focus on spending more time with people who I&amp;#8217;ve neglected and deserved better, and also meet some new ones, both for personal and professional reasons.&lt;/p&gt;

&lt;p&gt;What am I looking for?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Friends for activities, to exchange personal ideas, and to generally improve each other&amp;#8217;s life through motivation and keeping one in check. Awesome people to hang out with, basically.&lt;/li&gt;

&lt;li&gt;Talented mentors, be they engineers, managers, investors, or otherwise people with experience that can help me with advice and whom I can look up to.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Ultimate goal:&lt;/strong&gt; fulfilment and satisfaction with where I live and what activities I do, as well as where my life is heading, socially. More concretely, surrounding myself with a network that helps me grow and be generally happier.&lt;/p&gt;

&lt;h3 id='eat_less_meat'&gt;Eat less meat&lt;/h3&gt;

&lt;p&gt;In 2011 I met some people who inspired me to eat less meat. I tried it for a while, but ultimately fell back into habit and the convenience of eating meat. This year, I want to try harder, even if I have to go a bit out of my way. Some of the reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The industry of meat production and distribution is absolutely disgusting and cruel (both to animals and to workers).&lt;/li&gt;

&lt;li&gt;It&amp;#8217;s not an efficient means to feed ourselves as a population.&lt;/li&gt;

&lt;li&gt;It&amp;#8217;s very unhealthy, and most of the meat is full of hormones and additives that would not be necessary if proper treatment and procedures were in place.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I won&amp;#8217;t go into details, you can do the research yourself.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ultimate goal:&lt;/strong&gt; eat meat at most once a week. If I can do this for even just 3 months this year, I&amp;#8217;ll be happy. If I think I can go beyond this, I will.&lt;/p&gt;

&lt;h3 id='develop_managementleadership_skills'&gt;Develop management/leadership skills&lt;/h3&gt;

&lt;p&gt;Last year, I &lt;a href='http://www.crunchbase.com/company/sowink'&gt;founded a company&lt;/a&gt;. I didn&amp;#8217;t even stop to blog about it. Expect a blog post with further details soon.&lt;/p&gt;

&lt;p&gt;One of the things I learned is that I enjoy helping other people through management and leadership. It would be ideal if I could work in a position that allowed me to be a technical lead of some sort, and be responsible for one or more of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;technical product decisions&lt;/li&gt;

&lt;li&gt;scalability, performance, team technical culture (e.g. peer programming, workshops, etc)&lt;/li&gt;

&lt;li&gt;developer professional growth, helping others learn more and find/understand their career path&lt;/li&gt;

&lt;li&gt;drive innovation and user experience from a technical side&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Ultimate goal:&lt;/strong&gt; strengthen my social and leadership skills, with a technical focus. Qualify for more-social technical-positions.&lt;/p&gt;

&lt;h3 id='learn_about_emerging_markets_and_ideas'&gt;Learn about emerging markets and ideas&lt;/h3&gt;

&lt;p&gt;Being aware of the market and new ideas is important for playing a conscious, proactive role in society. One can do this by keeping up with market trends, new technologies and what technical changes are happening overseas.&lt;/p&gt;

&lt;p&gt;Lumped in with this, I&amp;#8217;d like to learn the basics about the business and legal side of technology, which would help me understand and better communicate with people working in these fields, as well as how to be better at it myself, why not.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ultimate goal:&lt;/strong&gt; understand what society is doing as a whole, technologically and economically, and what are the areas of growth and decline.&lt;/p&gt;

&lt;h2 id='onward_i_say'&gt;Onward, I say!&lt;/h2&gt;

&lt;p&gt;11 months from now, I will report back.&lt;/p&gt;

&lt;p&gt;Thanks to everyone who contributed to my life in 2011!&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Serve media from Amazon S3 and keep it in sync</title>
   <link href="http://embrangler.com/2012/01/serve-media-from-amazon-s3-and-keep-it-in-sync"/>
   <updated>2012-01-12T00:00:00-08:00</updated>
   <id>http://embrangler.com/2012/01/serve-media-from-amazon-s3-and-keep-it-in-sync</id>
   <content type="html">&lt;h2 id='table_of_contents'&gt;Table of contents&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='#summary'&gt;Summary&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#pros_and_cons'&gt;Pros and cons&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#get_started'&gt;Get started&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#results'&gt;Results&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#alternatives'&gt;Alternatives&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#approach'&gt;Approach&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#conclusion'&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='summary'&gt;Summary&lt;/h2&gt;

&lt;p&gt;Amazon S3 is an affordable, web-scale storage. It has a well supported python API, thanks to &lt;a href='https://github.com/boto/boto'&gt;boto&lt;/a&gt;, and it offers &amp;#8220;99.999999999% durability, with 99.99% availability.&amp;#8221; (&lt;a href='http://aws.amazon.com/s3/#requirements'&gt;quote&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;To improve the performance of a site, it helps to offload media to a different machine - that way your web server doesn&amp;#8217;t have to process additional requests for your assets. &lt;a href='https://github.com/pcraciunoiu/django-s3sync'&gt;django-s3sync&lt;/a&gt; helps you serve media such as your static media (CSS, JS, images) and user-uploaded content easily and efficiently.&lt;/p&gt;

&lt;h2 id='get_started'&gt;Get started&lt;/h2&gt;

&lt;p&gt;Go to &lt;a href='https://github.com/pcraciunoiu/django-s3sync'&gt;the github page&lt;/a&gt; and follow the installation instructions.&lt;/p&gt;

&lt;h2 id='pros_and_cons'&gt;Pros and cons&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Pros:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easy to install and get running&lt;/li&gt;

&lt;li&gt;Fall back to local URLs if file is not on S3 yet&lt;/li&gt;

&lt;li&gt;Separate buckets for static media VS user-uploaded media&lt;/li&gt;

&lt;li&gt;Easy to set up cron jobs, management commands to keep your media in sync&lt;/li&gt;

&lt;li&gt;Efficient sync of pending uploaded and deleted files&lt;/li&gt;

&lt;li&gt;Automatically link to files on S3 when they have been uploaded&lt;/li&gt;

&lt;li&gt;Optionally deletes files from S3 once they have been deleted locally&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Cons:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Currently only works using Django&amp;#8217;s &lt;code&gt;FileSystemStorage&lt;/code&gt; backend (*)&lt;/li&gt;

&lt;li&gt;You can only serve ALL of your static media from S,3 or NONE of it.&lt;/li&gt;

&lt;li&gt;Similarly, you can only serve ALL of your user media from S3, or NONE of it.&lt;/li&gt;

&lt;li&gt;Doesn&amp;#8217;t work with symlinks as far as I know&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(*) Can be easily fixed, but I&amp;#8217;ve kept it simple for my purposes.&lt;/p&gt;

&lt;h2 id='alternatives'&gt;Alternatives&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='https://github.com/kylemacfarlane/django-cuddlybuddly-storage-s3'&gt;django-cuddlybuddly-storage-s3&lt;/a&gt;, a fork of &lt;a href='https://github.com/iserko/django-storages'&gt;django-storages&lt;/a&gt;. Wasn&amp;#8217;t good enough for me, because it seems to upload the files right away, and I didn&amp;#8217;t want to block the server threads while they connect and upload to S3.&lt;/li&gt;

&lt;li&gt;&lt;a href='https://github.com/django-extensions/django-extensions'&gt;django-extensions&lt;/a&gt;&amp;#8217;s management command &lt;code&gt;sync_media_s3&lt;/code&gt;, which served as inspiration for my project, provides a simple management command that you can use to copy local files to S3. It does not support removing files that have been locally removed, nor does it support advanced pattern matching for files.&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Caching Django views with nginx and memcache</title>
   <link href="http://embrangler.com/2012/01/caching-django-views-with-nginx-and-memcache"/>
   <updated>2012-01-08T00:00:00-08:00</updated>
   <id>http://embrangler.com/2012/01/caching-django-views-with-nginx-and-memcache</id>
   <content type="html">&lt;h2 id='table_of_contents'&gt;Table of contents&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href='#summary'&gt;Summary&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='#motivation'&gt;Motivation&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='#pros_and_cons'&gt;Pros and cons&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='#results'&gt;Results&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='#alternatives'&gt;Alternatives&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='#research'&gt;Research&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='#approach'&gt;Approach&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='#conclusion'&gt;Conclusion&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='summary'&gt;Summary&lt;/h2&gt;

&lt;p&gt;I wanted a way to increase performance for some of our static pages. One way to do this is to cache Django pages somewhere, and serve that content from earlier on the request pipe.&lt;/p&gt;

&lt;p&gt;A simple approach is having &lt;a href='http://nginx.org/en/'&gt;nginx&lt;/a&gt; grab the page directly from memcache, without touching Django at all. Enter &lt;a href='https://github.com/pcraciunoiu/django-nginx-memcache'&gt;nginx_memcache&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id='motivation'&gt;Motivation&lt;/h2&gt;

&lt;p&gt;Performance increase. Avoiding database queries when they&amp;#8217;re unnecessary. Make your static pages load faster.&lt;/p&gt;

&lt;h2 id='pros_and_cons'&gt;Pros and cons&lt;/h2&gt;

&lt;p&gt;What can you do or cannot do with this approach?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Pros:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easy to set which views are cached from Django&lt;/li&gt;

&lt;li&gt;Flag for turning on and off&lt;/li&gt;

&lt;li&gt;Page versioning, so you can cache multiple versions for the same page, based on your own criteria&lt;/li&gt;

&lt;li&gt;User will see the same page version based on a cookie&lt;/li&gt;

&lt;li&gt;Significant speedup versus loading with Django (more below).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Cons:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Can only cache entire page at a time (though more research may show otherwise)&lt;/li&gt;

&lt;li&gt;No auto-invalidate from Django, until user visits some non-cached page (though possible to clear this cache when updating your codebase with a commit hook).&lt;/li&gt;

&lt;li&gt;Can no longer embed forms on that page unless CSRF is obtained through JS.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='results'&gt;Results&lt;/h2&gt;

&lt;p&gt;Our tests showed a &lt;em&gt;10x increase&lt;/em&gt; in kbps transferred with ApacheBench tests against our landing page (run with &lt;code&gt;ab -k -c 20 -n 2000&lt;/code&gt;, before and after).&lt;/p&gt;

&lt;p&gt;Deployment was very straightforward. You can &lt;a href='https://github.com/pcraciunoiu/django-nginx-memcache'&gt;read the docs&lt;/a&gt; for details.&lt;/p&gt;

&lt;h2 id='alternatives'&gt;Alternatives&lt;/h2&gt;

&lt;p&gt;&lt;a href='https://www.varnish-cache.org/about'&gt;Varnish&lt;/a&gt; can also be placed in front of or behind nginx, and there are several articles showing how to do this.&lt;/p&gt;

&lt;p&gt;Here&amp;#8217;s my 2 cents on django + varnish + nginx VS django + memcache + nginx:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;(+1 for memcache) Easier to configure nginx with memcache than Varnish. Configuring Varnish implied learning a whole new language (VCL), and adding one more piece of software to our technology stack.&lt;/li&gt;

&lt;li&gt;(+1 for varnish) &lt;a href='http://codysoyland.com/2010/jan/17/evaluating-django-caching-options/'&gt;Some perf tests&lt;/a&gt; out there say Varnish can be quite a bit faster. However, the difference is not orders of magnitude, so I was not compelled.&lt;/li&gt;

&lt;li&gt;(+1 for memcache) Django and Memcache are very well integrated. By contrast, python-varnish and django-varnish are not actively developed and have several known issues. Didn&amp;#8217;t seem a good idea for production.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='research_links'&gt;Research links&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='https://github.com/pcraciunoiu/django-nginx-memcache'&gt;django-nginx-memcache&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='https://github.com/shaunsephton/djanginxed'&gt;djangonginxed&lt;/a&gt;, an alternative to my project.&lt;/li&gt;

&lt;li&gt;&lt;a href='http://weichhold.com/2008/09/12/django-nginx-memcached-the-dynamic-trio/'&gt;django + nginx + memcache&lt;/a&gt; middleware example.&lt;/li&gt;

&lt;li&gt;&lt;a href='http://codysoyland.com/2010/jan/17/evaluating-django-caching-options/'&gt;Evaluating Django caching options&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://ghughes.com/blog/2011/11/11/using-varnish-with-django-for-high-performance-caching/'&gt;Using varnish with Django for high performance caching&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://www.quora.com/What-is-an-ideal-architecure-that-includes-nginx-and-Varnish?q=varnish+nginx'&gt;What is an ideal architecture that includes nginx and Varnish?&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://www.linuxpinguin.de/2011/09/nva-setup-nginx-varnish-apache/'&gt;Example set up for nginx in front of varnish&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://serverfault.com/questions/111678/how-to-setup-nginx-with-varnish'&gt;Example set up for varnish in front of nginx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>DataStore - an abstraction layer for storing data and processing requests</title>
   <link href="http://embrangler.com/2011/03/datastore-an-abstraction-layer"/>
   <updated>2011-03-01T00:00:00-08:00</updated>
   <id>http://embrangler.com/2011/03/datastore-an-abstraction-layer</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;Update 2012/01:&lt;/strong&gt; I still haven&amp;#8217;t started working on this project and I&amp;#8217;ve heard much interest from others. Some have offered to pick up the project. I will update this post once the project finds a home.&lt;/p&gt;

&lt;h2 id='table_of_contents'&gt;Table of contents&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href='#motivation'&gt;Motivation&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#idea'&gt;Idea&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#from_past_to_present_what_now'&gt;From past to present, what now?&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#what_does_better_mean'&gt;What does better mean?&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#why_should_you_care'&gt;Why should you care?&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#my_scenario'&gt;My scenario&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#what_worked_for_me'&gt;What worked for me&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#proposed_features'&gt;Proposed features&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#help'&gt;Help!&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id='motivation'&gt;Motivation&lt;/h2&gt;

&lt;p&gt;I wrote an application which extensively used Ajax requests to communicate with the server. After a while I wanted to add &lt;a href='http://developer.mozilla.org/en/dom/storage#localStorage'&gt;localStorage&lt;/a&gt;. Though most actions were grouped together, there were still more than just a handful of Ajax requests that had to be changed. Then I thought what if I want to add IndexedDB later on&amp;#8230;&lt;/p&gt;

&lt;p&gt;&amp;#8230; you can see where this is going: &lt;a href='http://www.brainstuck.com/2009/09/30/cartel/'&gt;maintenance hell.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then I thought: other people must be having similar problems. Hence&amp;#8230;&lt;/p&gt;

&lt;h2 id='idea'&gt;Idea&lt;/h2&gt;

&lt;p&gt;A library to unify all the different data storage/retrieval/sending/receiving API&amp;#8217;s such as XMLHttpRequest, WebSockets, localStorage, IndexedDB, and make it easier to use any number of them at once.&lt;/p&gt;

&lt;h2 id='from_past_to_present_what_now'&gt;From past to present, what now?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Past:&lt;/strong&gt; Before, all we had was AJAX requests. Really.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To present:&lt;/strong&gt; With the new technologies coming up in the HTML5 era, we&amp;#8217;ve got localStorage and IndexedDB, WebSockets, node.js, and more. Hectic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What now?&lt;/strong&gt; Don&amp;#8217;t you wish there was a &lt;em&gt;better way&lt;/em&gt; to send and receive data in the browser?&lt;/p&gt;

&lt;h2 id='what_does_better_mean'&gt;What does better mean?&lt;/h2&gt;

&lt;p&gt;My general goals for this are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Simple key/value store common abstraction.&lt;/li&gt;

&lt;li&gt;Pluggable handlers for each type of send/receive.&lt;/li&gt;

&lt;li&gt;Use other abstractions specified in each handler (library surfaces your API as well).&lt;/li&gt;

&lt;li&gt;Straightforward way to define flow of data. &lt;a href='#flow_of_data'&gt;More on this later.&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Anything else you wish it could do?&lt;/p&gt;

&lt;h2 id='why_should_you_care'&gt;Why should you care?&lt;/h2&gt;

&lt;p&gt;Short answer: &lt;strong&gt;maintenance, scalability, flexibility.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As these technologies become widely supported, you will start seeing a common problem for websites heavily relying on AJAX (or any kind of data transfer without page reloads): &lt;em&gt;how do you take advantage of them without rewriting your entire codebase every time there&amp;#8217;s a new technology (API/storage engine/etc) coming out?&lt;/em&gt;&lt;/p&gt;

&lt;h2 id='my_scenario'&gt;My scenario&lt;/h2&gt;

&lt;p&gt;The whole reason I got thinking about this was because it happened to me. And it was frustrating.&lt;/p&gt;

&lt;p&gt;I had this client-side application using &lt;a href='http://api.jquery.com/jQuery.ajax/'&gt;jQuery.ajax requests&lt;/a&gt;, and I wanted to take advantage of localStorage for some of them, for data that I didn&amp;#8217;t need to get from the server on every page load.&lt;/p&gt;

&lt;p&gt;I considered:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Quick&amp;#8217;n&amp;#8217;dirty: Rewrite these pieces of the application to do both localStorage and ajax requests as fallback.&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;&lt;a href='#what_worked_for_me'&gt;Slightly better:&lt;/a&gt;&lt;/strong&gt; A library that&amp;#8217;s flexible enough for my purposes.&lt;/li&gt;

&lt;li&gt;&lt;a href='#proposed_features'&gt;Ideal:&lt;/a&gt; A library that would allow me to enable/disable localStorage as an intermediary step on a per-request basis, make it easy to add IndexedDB support later, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='what_worked_for_me'&gt;What worked for me&lt;/h2&gt;

&lt;p&gt;The simpler thing I went with was a Data object with a couple of functions.&lt;/p&gt;

&lt;p&gt;Example usage:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='javascript'&gt;&lt;span class='lineno'&gt; 1&lt;/span&gt; &lt;span class='c1'&gt;// main.js&lt;/span&gt;
&lt;span class='lineno'&gt; 2&lt;/span&gt; &lt;span class='nb'&gt;window&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;data&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='k'&gt;new&lt;/span&gt; &lt;span class='nx'&gt;DataStore&lt;/span&gt;&lt;span class='p'&gt;({&lt;/span&gt;
&lt;span class='lineno'&gt; 3&lt;/span&gt;     &lt;span class='nx'&gt;url&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;/fetch_new_data&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
&lt;span class='lineno'&gt; 4&lt;/span&gt;     &lt;span class='c1'&gt;// show a spinny tangy&lt;/span&gt;
&lt;span class='lineno'&gt; 5&lt;/span&gt;     &lt;span class='nx'&gt;sync_before&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt; &lt;span class='nx'&gt;showSyncInProgress&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='p'&gt;...&lt;/span&gt; &lt;span class='p'&gt;},&lt;/span&gt;
&lt;span class='lineno'&gt; 6&lt;/span&gt;     &lt;span class='c1'&gt;// hide the spinny thingy, maybe show a fading notification&lt;/span&gt;
&lt;span class='lineno'&gt; 7&lt;/span&gt;     &lt;span class='nx'&gt;sync_success&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt; &lt;span class='nx'&gt;showSyncDone&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='p'&gt;...&lt;/span&gt; &lt;span class='p'&gt;},&lt;/span&gt;
&lt;span class='lineno'&gt; 8&lt;/span&gt;     &lt;span class='c1'&gt;// hide the spinny thingy, definitely show some message&lt;/span&gt;
&lt;span class='lineno'&gt; 9&lt;/span&gt;     &lt;span class='nx'&gt;sync_error&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt; &lt;span class='nx'&gt;showSyncFailed&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt; &lt;span class='p'&gt;...&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='lineno'&gt;10&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='lineno'&gt;11&lt;/span&gt; 
&lt;span class='lineno'&gt;12&lt;/span&gt; &lt;span class='c1'&gt;// example request&lt;/span&gt;
&lt;span class='lineno'&gt;13&lt;/span&gt; &lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;i&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='mi'&gt;0&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
&lt;span class='lineno'&gt;14&lt;/span&gt; &lt;span class='nb'&gt;window&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;data&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;process_request&lt;/span&gt;&lt;span class='p'&gt;({&lt;/span&gt;
&lt;span class='lineno'&gt;15&lt;/span&gt;     &lt;span class='nx'&gt;ajax&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;&lt;span class='nx'&gt;url&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;/new_comment&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;type&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
&lt;span class='lineno'&gt;16&lt;/span&gt;            &lt;span class='nx'&gt;data&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;#comment-form&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;).&lt;/span&gt;&lt;span class='nx'&gt;serialize&lt;/span&gt;&lt;span class='p'&gt;()},&lt;/span&gt;
&lt;span class='lineno'&gt;17&lt;/span&gt;     &lt;span class='nx'&gt;key&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;comment_&amp;#39;&lt;/span&gt; &lt;span class='o'&gt;+&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;i&lt;/span&gt;&lt;span class='o'&gt;++&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt;
&lt;span class='lineno'&gt;18&lt;/span&gt;     &lt;span class='nx'&gt;value&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;author&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;#comment-form .author&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;).&lt;/span&gt;&lt;span class='nx'&gt;val&lt;/span&gt;&lt;span class='p'&gt;(),&lt;/span&gt;
&lt;span class='lineno'&gt;19&lt;/span&gt;             &lt;span class='s1'&gt;&amp;#39;text&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;#comment-form .text&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;).&lt;/span&gt;&lt;span class='nx'&gt;val&lt;/span&gt;&lt;span class='p'&gt;()}&lt;/span&gt;
&lt;span class='lineno'&gt;20&lt;/span&gt; &lt;span class='p'&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;ajax.data&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; are actually very similar, with an important exception in most applications (e.g. Django): the csrftoken. We don&amp;#8217;t need to store that in localStorage for every request. So I chose to keep the two completely separate. You could subclass DataStore and make it save you this extra work per request.&lt;/p&gt;

&lt;p&gt;Below is an example implementation (&lt;a href='/files/code/datastore/datastore.js'&gt;raw file&lt;/a&gt;):&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='javascript'&gt;&lt;span class='lineno'&gt;  1&lt;/span&gt; &lt;span class='cm'&gt;/* This depends on Crockford&amp;#39;s json2.js&lt;/span&gt;
&lt;span class='lineno'&gt;  2&lt;/span&gt; &lt;span class='cm'&gt; * from https://github.com/douglascrockford/JSON-js&lt;/span&gt;
&lt;span class='lineno'&gt;  3&lt;/span&gt; &lt;span class='cm'&gt; * Options:&lt;/span&gt;
&lt;span class='lineno'&gt;  4&lt;/span&gt; &lt;span class='cm'&gt; *     - url: function()&lt;/span&gt;
&lt;span class='lineno'&gt;  5&lt;/span&gt; &lt;span class='cm'&gt; *     - sync_before: function()&lt;/span&gt;
&lt;span class='lineno'&gt;  6&lt;/span&gt; &lt;span class='cm'&gt; *     - sync_success: function()&lt;/span&gt;
&lt;span class='lineno'&gt;  7&lt;/span&gt; &lt;span class='cm'&gt; *     - sync_error: function()&lt;/span&gt;
&lt;span class='lineno'&gt;  8&lt;/span&gt; &lt;span class='cm'&gt; */&lt;/span&gt;
&lt;span class='lineno'&gt;  9&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt; &lt;span class='nx'&gt;DataStore&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;options&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
&lt;span class='lineno'&gt; 10&lt;/span&gt;     &lt;span class='nb'&gt;window&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;data&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
&lt;span class='lineno'&gt; 11&lt;/span&gt;     &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;storage&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='nb'&gt;window&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;localStorage&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
&lt;span class='lineno'&gt; 12&lt;/span&gt;     &lt;span class='c1'&gt;// date of last time we synced&lt;/span&gt;
&lt;span class='lineno'&gt; 13&lt;/span&gt;     &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;last_sync&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='kc'&gt;null&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
&lt;span class='lineno'&gt; 14&lt;/span&gt;     &lt;span class='c1'&gt;// queue of requests, populated if offline&lt;/span&gt;
&lt;span class='lineno'&gt; 15&lt;/span&gt;     &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;queue&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='p'&gt;[];&lt;/span&gt;
&lt;span class='lineno'&gt; 16&lt;/span&gt; 
&lt;span class='lineno'&gt; 17&lt;/span&gt;     &lt;span class='cm'&gt;/**&lt;/span&gt;
&lt;span class='lineno'&gt; 18&lt;/span&gt; &lt;span class='cm'&gt;     * Gets data stored at `key`; `key` is a string&lt;/span&gt;
&lt;span class='lineno'&gt; 19&lt;/span&gt; &lt;span class='cm'&gt;     */&lt;/span&gt;
&lt;span class='lineno'&gt; 20&lt;/span&gt;     &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;get_data&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;key&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
&lt;span class='lineno'&gt; 21&lt;/span&gt;         &lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;str_data&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;storage&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;getItem&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;key&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='lineno'&gt; 22&lt;/span&gt;         &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='nx'&gt;JSON&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;parse&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;str_data&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='lineno'&gt; 23&lt;/span&gt;     &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='lineno'&gt; 24&lt;/span&gt; 
&lt;span class='lineno'&gt; 25&lt;/span&gt;     &lt;span class='cm'&gt;/**&lt;/span&gt;
&lt;span class='lineno'&gt; 26&lt;/span&gt; &lt;span class='cm'&gt;     * Sets data at `key`; `key` is a string&lt;/span&gt;
&lt;span class='lineno'&gt; 27&lt;/span&gt; &lt;span class='cm'&gt;     */&lt;/span&gt;
&lt;span class='lineno'&gt; 28&lt;/span&gt;     &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;set_data&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;key&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;data&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
&lt;span class='lineno'&gt; 29&lt;/span&gt;         &lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;str_data&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='nx'&gt;JSON&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;stringify&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;data&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='lineno'&gt; 30&lt;/span&gt;         &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;storage&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;setItem&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;key&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;str_data&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='lineno'&gt; 31&lt;/span&gt;     &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='lineno'&gt; 32&lt;/span&gt; 
&lt;span class='lineno'&gt; 33&lt;/span&gt;     &lt;span class='cm'&gt;/**&lt;/span&gt;
&lt;span class='lineno'&gt; 34&lt;/span&gt; &lt;span class='cm'&gt;     * Syncs data between local storage and server, depending on&lt;/span&gt;
&lt;span class='lineno'&gt; 35&lt;/span&gt; &lt;span class='cm'&gt;     * modifications and online status.&lt;/span&gt;
&lt;span class='lineno'&gt; 36&lt;/span&gt; &lt;span class='cm'&gt;     */&lt;/span&gt;
&lt;span class='lineno'&gt; 37&lt;/span&gt;     &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;sync_data&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt; &lt;span class='p'&gt;()&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
&lt;span class='lineno'&gt; 38&lt;/span&gt;         &lt;span class='c1'&gt;// must be online to sync&lt;/span&gt;
&lt;span class='lineno'&gt; 39&lt;/span&gt;         &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='o'&gt;!&lt;/span&gt;&lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;is_online&lt;/span&gt;&lt;span class='p'&gt;())&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
&lt;span class='lineno'&gt; 40&lt;/span&gt;             &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='kc'&gt;false&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
&lt;span class='lineno'&gt; 41&lt;/span&gt;         &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='lineno'&gt; 42&lt;/span&gt; 
&lt;span class='lineno'&gt; 43&lt;/span&gt;         &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;last_sync&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;get_data&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;last_sync&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='lineno'&gt; 44&lt;/span&gt; 
&lt;span class='lineno'&gt; 45&lt;/span&gt;         &lt;span class='c1'&gt;// have we never synced before in this browser?&lt;/span&gt;
&lt;span class='lineno'&gt; 46&lt;/span&gt;         &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='o'&gt;!&lt;/span&gt;&lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;last_sync&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
&lt;span class='lineno'&gt; 47&lt;/span&gt;             &lt;span class='c1'&gt;// first-time setup&lt;/span&gt;
&lt;span class='lineno'&gt; 48&lt;/span&gt;             &lt;span class='c1'&gt;// ...&lt;/span&gt;
&lt;span class='lineno'&gt; 49&lt;/span&gt;             &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;last_sync&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='p'&gt;{};&lt;/span&gt;
&lt;span class='lineno'&gt; 50&lt;/span&gt;             &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;last_sync&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;when&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='k'&gt;new&lt;/span&gt; &lt;span class='nb'&gt;Date&lt;/span&gt;&lt;span class='p'&gt;().&lt;/span&gt;&lt;span class='nx'&gt;getTime&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;
&lt;span class='lineno'&gt; 51&lt;/span&gt;             &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;last_sync&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;is_modified&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='kc'&gt;false&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
&lt;span class='lineno'&gt; 52&lt;/span&gt;         &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='lineno'&gt; 53&lt;/span&gt; 
&lt;span class='lineno'&gt; 54&lt;/span&gt;         &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;last_sync&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;is_modified&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
&lt;span class='lineno'&gt; 55&lt;/span&gt;             &lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;request_options&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
&lt;span class='lineno'&gt; 56&lt;/span&gt;             &lt;span class='c1'&gt;// sync modified data&lt;/span&gt;
&lt;span class='lineno'&gt; 57&lt;/span&gt;             &lt;span class='c1'&gt;// you can pass callbacks here too&lt;/span&gt;
&lt;span class='lineno'&gt; 58&lt;/span&gt;             &lt;span class='k'&gt;while&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;queue&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;length&lt;/span&gt; &lt;span class='o'&gt;&amp;gt;&lt;/span&gt; &lt;span class='mi'&gt;0&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
&lt;span class='lineno'&gt; 59&lt;/span&gt;                 &lt;span class='nx'&gt;request_options&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;queue&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;pop&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;
&lt;span class='lineno'&gt; 60&lt;/span&gt;                 &lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;ajax&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;request_options&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;ajax&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='lineno'&gt; 61&lt;/span&gt;             &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='lineno'&gt; 62&lt;/span&gt;             &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;set_data&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;queue&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='p'&gt;[]);&lt;/span&gt;
&lt;span class='lineno'&gt; 63&lt;/span&gt;             &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;last_sync&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;is_modified&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='kc'&gt;false&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
&lt;span class='lineno'&gt; 64&lt;/span&gt;         &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='lineno'&gt; 65&lt;/span&gt;         &lt;span class='c1'&gt;// data is synced, update sync time&lt;/span&gt;
&lt;span class='lineno'&gt; 66&lt;/span&gt;         &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;set_data&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;last_sync&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;last_sync&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='lineno'&gt; 67&lt;/span&gt; 
&lt;span class='lineno'&gt; 68&lt;/span&gt;         &lt;span class='c1'&gt;// get modified data from the server here&lt;/span&gt;
&lt;span class='lineno'&gt; 69&lt;/span&gt;        &lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;ajax&lt;/span&gt;&lt;span class='p'&gt;({&lt;/span&gt;
&lt;span class='lineno'&gt; 70&lt;/span&gt;             &lt;span class='nx'&gt;type&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
&lt;span class='lineno'&gt; 71&lt;/span&gt;             &lt;span class='nx'&gt;url&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='nx'&gt;options&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;url&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
&lt;span class='lineno'&gt; 72&lt;/span&gt;             &lt;span class='nx'&gt;dataType&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;json&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
&lt;span class='lineno'&gt; 73&lt;/span&gt;             &lt;span class='nx'&gt;data&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;last_sync&amp;#39;&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;last_sync&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;sync_date&lt;/span&gt;&lt;span class='p'&gt;},&lt;/span&gt;
&lt;span class='lineno'&gt; 74&lt;/span&gt;             &lt;span class='nx'&gt;beforeSend&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt;
&lt;span class='lineno'&gt; 75&lt;/span&gt;                 &lt;span class='c1'&gt;// here you can show some &amp;quot;sync in progress&amp;quot; icon&lt;/span&gt;
&lt;span class='lineno'&gt; 76&lt;/span&gt;                 &lt;span class='nx'&gt;options&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;sync_before&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
&lt;span class='lineno'&gt; 77&lt;/span&gt;             &lt;span class='nx'&gt;error&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt;
&lt;span class='lineno'&gt; 78&lt;/span&gt;                 &lt;span class='c1'&gt;// an error callback should be passed in to this Data&lt;/span&gt;
&lt;span class='lineno'&gt; 79&lt;/span&gt;                 &lt;span class='c1'&gt;// object and would be called here&lt;/span&gt;
&lt;span class='lineno'&gt; 80&lt;/span&gt;                 &lt;span class='nx'&gt;options&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;sync_error&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
&lt;span class='lineno'&gt; 81&lt;/span&gt;             &lt;span class='nx'&gt;success&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;response&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;textStatus&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;request&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
&lt;span class='lineno'&gt; 82&lt;/span&gt;                 &lt;span class='c1'&gt;// callback for success&lt;/span&gt;
&lt;span class='lineno'&gt; 83&lt;/span&gt;                 &lt;span class='nx'&gt;options&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;sync_success&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;
&lt;span class='lineno'&gt; 84&lt;/span&gt;                     &lt;span class='nx'&gt;response&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;textStatus&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;request&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='lineno'&gt; 85&lt;/span&gt;             &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='lineno'&gt; 86&lt;/span&gt;         &lt;span class='p'&gt;});&lt;/span&gt;
&lt;span class='lineno'&gt; 87&lt;/span&gt; 
&lt;span class='lineno'&gt; 88&lt;/span&gt; 
&lt;span class='lineno'&gt; 89&lt;/span&gt;     &lt;span class='cm'&gt;/**&lt;/span&gt;
&lt;span class='lineno'&gt; 90&lt;/span&gt; &lt;span class='cm'&gt;     * Process a request. This is where all the magic happens.&lt;/span&gt;
&lt;span class='lineno'&gt; 91&lt;/span&gt; &lt;span class='cm'&gt;     */&lt;/span&gt;
&lt;span class='lineno'&gt; 92&lt;/span&gt;     &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;process_request&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;request_options&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
&lt;span class='lineno'&gt; 93&lt;/span&gt;         &lt;span class='nx'&gt;request_options&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;beforeSend&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;
&lt;span class='lineno'&gt; 94&lt;/span&gt;         &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;set_data&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;request_options&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;key&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;request_options&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;value&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='lineno'&gt; 95&lt;/span&gt; 
&lt;span class='lineno'&gt; 96&lt;/span&gt;         &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;is_online&lt;/span&gt;&lt;span class='p'&gt;())&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
&lt;span class='lineno'&gt; 97&lt;/span&gt;             &lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;ajax&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;request_options&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;ajax&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='lineno'&gt; 98&lt;/span&gt;         &lt;span class='p'&gt;}&lt;/span&gt; &lt;span class='k'&gt;else&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
&lt;span class='lineno'&gt; 99&lt;/span&gt;             &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;queue&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;push&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;request_options&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='lineno'&gt;100&lt;/span&gt;             &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;last_sync&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;is_modified&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='kc'&gt;true&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
&lt;span class='lineno'&gt;101&lt;/span&gt;             &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;set_data&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;last_sync&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;last_sync&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='lineno'&gt;102&lt;/span&gt;             &lt;span class='c1'&gt;// there are issues with this, storing functions as&lt;/span&gt;
&lt;span class='lineno'&gt;103&lt;/span&gt;             &lt;span class='c1'&gt;// strings is not a good idea :)&lt;/span&gt;
&lt;span class='lineno'&gt;104&lt;/span&gt;             &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;set_data&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;queue&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;queue&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='lineno'&gt;105&lt;/span&gt;         &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='lineno'&gt;106&lt;/span&gt; 
&lt;span class='lineno'&gt;107&lt;/span&gt;         &lt;span class='nx'&gt;request_options&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;processed&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;
&lt;span class='lineno'&gt;108&lt;/span&gt;     &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='lineno'&gt;109&lt;/span&gt; 
&lt;span class='lineno'&gt;110&lt;/span&gt;     &lt;span class='cm'&gt;/**&lt;/span&gt;
&lt;span class='lineno'&gt;111&lt;/span&gt; &lt;span class='cm'&gt;     * Return true if online, false otherwise.&lt;/span&gt;
&lt;span class='lineno'&gt;112&lt;/span&gt; &lt;span class='cm'&gt;     */&lt;/span&gt;
&lt;span class='lineno'&gt;113&lt;/span&gt;     &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;is_online&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt; &lt;span class='p'&gt;()&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
&lt;span class='lineno'&gt;114&lt;/span&gt;         &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;navigator&lt;/span&gt; &lt;span class='o'&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class='nx'&gt;navigator&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;onLine&lt;/span&gt; &lt;span class='o'&gt;!==&lt;/span&gt; &lt;span class='kc'&gt;undefined&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
&lt;span class='lineno'&gt;115&lt;/span&gt;             &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='nx'&gt;navigator&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;onLine&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
&lt;span class='lineno'&gt;116&lt;/span&gt;         &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='lineno'&gt;117&lt;/span&gt;         &lt;span class='k'&gt;try&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
&lt;span class='lineno'&gt;118&lt;/span&gt;             &lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;request&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='k'&gt;new&lt;/span&gt; &lt;span class='nx'&gt;XMLHttpRequest&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;
&lt;span class='lineno'&gt;119&lt;/span&gt;             &lt;span class='nx'&gt;request&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;open&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='kc'&gt;false&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='lineno'&gt;120&lt;/span&gt;             &lt;span class='nx'&gt;request&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;send&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='kc'&gt;null&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='lineno'&gt;121&lt;/span&gt;             &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;request&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;status&lt;/span&gt; &lt;span class='o'&gt;===&lt;/span&gt; &lt;span class='mi'&gt;200&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='lineno'&gt;122&lt;/span&gt;         &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='lineno'&gt;123&lt;/span&gt;         &lt;span class='k'&gt;catch&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;e&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
&lt;span class='lineno'&gt;124&lt;/span&gt;             &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='kc'&gt;false&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
&lt;span class='lineno'&gt;125&lt;/span&gt;         &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='lineno'&gt;126&lt;/span&gt;     &lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='lineno'&gt;127&lt;/span&gt; &lt;span class='p'&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id='proposed_features'&gt;Proposed Features&lt;/h2&gt;

&lt;p&gt;The example API isn&amp;#8217;t bad, but I think it could be better. Perhaps something along the lines of &lt;a href='http://westcoastlogic.com/lawnchair/'&gt;Lawnchair&lt;/a&gt;. As I&amp;#8217;m writing this, I realize that writing an API is going to take longer than I&amp;#8217;d like - therefore, this will serve as a teaser and food for thought. Feedback is welcome.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add an &lt;em&gt;.each&lt;/em&gt; method for iterating over retrieved objects (inspired by Lawnchair)&lt;/li&gt;

&lt;li&gt;Standard &lt;code&gt;DataStore.save, .get, .remove, etc.&lt;/code&gt;&lt;/li&gt;

&lt;li&gt;Support for these &amp;#8220;storage engines&amp;#8221;: localStorage, IndexedDB, send-to-server.&lt;/li&gt;

&lt;li&gt;Support for these request types: XMLHttpRequest, &lt;a href='http://en.wikipedia.org/wiki/WebSockets'&gt;WebSockets&lt;/a&gt;.&lt;/li&gt;

&lt;li&gt;Store, at the very least, primitive values and JSON.&lt;/li&gt;

&lt;li&gt;Include callbacks for various stages in the process of a request, similar to jQuery.ajax, e.g. &lt;code&gt;beforeSend, complete, success, error&lt;/code&gt;. Figure out a good way to do this at each layer (minimize confusion).&lt;/li&gt;

&lt;li&gt;For each request, specify which layers and in what order to go through. For example, if you want to store something in localStorage, IndexedDB, and send it to the server, you could do it in that order or the reverse.&lt;/li&gt;

&lt;li&gt;Control whether to go to the next layer type depending on whether the previous succeeded or failed. Say, if you want to send the request to server but that fails, try localStorage as a fallback. Or the opposite.&lt;/li&gt;

&lt;li&gt;Include a &lt;code&gt;.get_then_store&lt;/code&gt; shortcut for getting the data from layer A and storing it in layer B?&lt;/li&gt;

&lt;li&gt;Extensible: as easy as &lt;code&gt;DataStore.addLayer(layerName, layerHandler)&lt;/code&gt;, where layerHandler (obviously) implements some common API along with exposing some of its own, if necessary (e.g. ability to query or find, for IndexedDB).&lt;/li&gt;

&lt;li&gt;As sending and getting data from the server means keeping &lt;em&gt;two or more&lt;/em&gt; databases in sync, collisions may arise. Provide a collision callback or some smart defaults for handling collision. E.g. sometimes server data is always right (trusted more than user data), other times local data is king.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='help'&gt;Help!&lt;/h2&gt;

&lt;p&gt;Hopefully my rant has gotten you thinking about the right approach. What would you like to see? What would make this something you would use and be happy with?&lt;/p&gt;

&lt;p&gt;If you are interested in getting involved with coding this, contact me at paulc at mozilla.com.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Python scoping: understading LEGB</title>
   <link href="http://embrangler.com/2011/01/python-scoping-understading-legb"/>
   <updated>2011-01-31T00:00:00-08:00</updated>
   <id>http://embrangler.com/2011/01/python-scoping-understading-legb</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Thanks to Avazu for &lt;a href='#what_to_do'&gt;a clean suggestion&lt;/a&gt; and Fred for pointing out I should have indicated a good way to get around this.&lt;/p&gt;

&lt;h2 id='summary'&gt;Summary&lt;/h2&gt;

&lt;p&gt;Python scoping fun! &lt;a href='http://stackoverflow.com/questions/291978/short-description-of-python-scoping-rules'&gt;Read about LEGB&lt;/a&gt; to understand the basics of python scoping.&lt;/p&gt;

&lt;h2 id='beef'&gt;Beef&lt;/h2&gt;

&lt;p&gt;I never bothered to read about how python scoping works until I hit this. It&amp;#8217;s not exactly something to research until you have issues with it. :)&lt;/p&gt;

&lt;p&gt;I had something like this going on:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='lineno'&gt; 1&lt;/span&gt; &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;func1&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;param&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='bp'&gt;None&lt;/span&gt;&lt;span class='p'&gt;):&lt;/span&gt;
&lt;span class='lineno'&gt; 2&lt;/span&gt;     &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;func2&lt;/span&gt;&lt;span class='p'&gt;():&lt;/span&gt;
&lt;span class='lineno'&gt; 3&lt;/span&gt;         &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='ow'&gt;not&lt;/span&gt; &lt;span class='n'&gt;param&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt;
&lt;span class='lineno'&gt; 4&lt;/span&gt;             &lt;span class='n'&gt;param&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='s'&gt;&amp;#39;default&amp;#39;&lt;/span&gt;
&lt;span class='lineno'&gt; 5&lt;/span&gt;         &lt;span class='k'&gt;print&lt;/span&gt; &lt;span class='n'&gt;param&lt;/span&gt;
&lt;span class='lineno'&gt; 6&lt;/span&gt;     &lt;span class='c'&gt;# Just return func2.&lt;/span&gt;
&lt;span class='lineno'&gt; 7&lt;/span&gt;     &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='n'&gt;func2&lt;/span&gt;
&lt;span class='lineno'&gt; 8&lt;/span&gt; 
&lt;span class='lineno'&gt; 9&lt;/span&gt; 
&lt;span class='lineno'&gt;10&lt;/span&gt; &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='n'&gt;__name__&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; &lt;span class='s'&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt;
&lt;span class='lineno'&gt;11&lt;/span&gt;     &lt;span class='n'&gt;func1&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;)()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Actual code was not as straightforward, &lt;code&gt;func2&lt;/code&gt; was actually a decorator. Admittedly, using the same parameter name is not a must, but it&amp;#8217;s still a curiosity. I just wanted to fall back to a default value on run-time.&lt;/p&gt;

&lt;p&gt;If you try to run this in python, here&amp;#8217;s what you get:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='o'&gt;~&lt;/span&gt; &lt;span class='err'&gt;$&lt;/span&gt; &lt;span class='n'&gt;python&lt;/span&gt; &lt;span class='n'&gt;test&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;py&lt;/span&gt; 
&lt;span class='n'&gt;Traceback&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;most&lt;/span&gt; &lt;span class='n'&gt;recent&lt;/span&gt; &lt;span class='n'&gt;call&lt;/span&gt; &lt;span class='n'&gt;last&lt;/span&gt;&lt;span class='p'&gt;):&lt;/span&gt;
  &lt;span class='n'&gt;File&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;test.py&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;line&lt;/span&gt; &lt;span class='mi'&gt;11&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ow'&gt;in&lt;/span&gt; &lt;span class='o'&gt;&amp;lt;&lt;/span&gt;&lt;span class='n'&gt;module&lt;/span&gt;&lt;span class='o'&gt;&amp;gt;&lt;/span&gt;
    &lt;span class='n'&gt;func1&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;)()&lt;/span&gt;
  &lt;span class='n'&gt;File&lt;/span&gt; &lt;span class='s'&gt;&amp;quot;test.py&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;line&lt;/span&gt; &lt;span class='mi'&gt;3&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ow'&gt;in&lt;/span&gt; &lt;span class='n'&gt;func2&lt;/span&gt;
    &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='ow'&gt;not&lt;/span&gt; &lt;span class='n'&gt;param&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt;
&lt;span class='ne'&gt;UnboundLocalError&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='n'&gt;local&lt;/span&gt; &lt;span class='n'&gt;variable&lt;/span&gt; &lt;span class='s'&gt;&amp;#39;param&amp;#39;&lt;/span&gt; &lt;span class='n'&gt;referenced&lt;/span&gt; &lt;span class='n'&gt;before&lt;/span&gt; &lt;span class='n'&gt;assignment&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;If you&amp;#8217;re curious, you can &lt;a href='http://stackoverflow.com/questions/291978/short-description-of-python-scoping-rules'&gt;read about the principles of LEGB.&lt;/a&gt; You have to understand a bit about compilers and &lt;a href='http://en.wikipedia.org/wiki/Abstract_syntax_tree'&gt;the AST&lt;/a&gt; to get what&amp;#8217;s going on behind the scenes. You might think that replacing lines 3-4 with:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='n'&gt;param&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;param&lt;/span&gt; &lt;span class='ow'&gt;or&lt;/span&gt; &lt;span class='s'&gt;&amp;#39;default&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Might work. But no. You can&amp;#8217;t assign the same parameter at the local level if the enclosing level defines it. Even this fails:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='n'&gt;param&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;param&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Fun, no?&lt;/p&gt;

&lt;h2 id='what_to_do'&gt;What to do?&lt;/h2&gt;

&lt;p&gt;There are a few ways to get around this.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Assign &lt;code&gt;param&lt;/code&gt; outside of func2. This doesn&amp;#8217;t work if you need the default value to be dependent on what params func2 receives.&lt;/li&gt;

&lt;li&gt;Use a second variable, &lt;code&gt;param2&lt;/code&gt; inside of func2 (posted below).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is the solution suggested by our commenter Avazu (over on &lt;a href='http://blog.mozilla.com/webdev/2011/01/31/python-scoping-understanding-legb/#comments'&gt;the mozilla webdev blog&lt;/a&gt;):&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;func1&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;param&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='bp'&gt;None&lt;/span&gt;&lt;span class='p'&gt;):&lt;/span&gt;
    &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;func2&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;param2&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='n'&gt;param&lt;/span&gt;&lt;span class='p'&gt;):&lt;/span&gt;
        &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='ow'&gt;not&lt;/span&gt; &lt;span class='n'&gt;param2&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt;
            &lt;span class='n'&gt;param2&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='s'&gt;&amp;#39;default&amp;#39;&lt;/span&gt;
        &lt;span class='k'&gt;print&lt;/span&gt; &lt;span class='n'&gt;param2&lt;/span&gt;
    &lt;span class='c'&gt;# Just return func2.&lt;/span&gt;
    &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='n'&gt;func2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id='read_more'&gt;Read more&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://stackoverflow.com/questions/291978/short-description-of-python-scoping-rules'&gt;LEGB (stackoverflow)&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://docs.python.org/tutorial/classes.html#python-scopes-and-namespaces'&gt;Python docs on scope and namespaces.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Belated birthday resolutions</title>
   <link href="http://embrangler.com/2010/12/belated-birthday-resolutions"/>
   <updated>2010-12-11T00:00:00-08:00</updated>
   <id>http://embrangler.com/2010/12/belated-birthday-resolutions</id>
   <content type="html">&lt;p&gt;Table of contents:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href='#why'&gt;Why?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='#thanks_previous_year'&gt;Thanks, previous year!&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='#what_now'&gt;What now?&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href='#understand_my_place_on_the_web'&gt;Understand my place on the web&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#take_more_risks'&gt;Take more risks&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#take_more_steps_back_think_ahead'&gt;Take more steps back, think ahead&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#use_the_power_of_choice'&gt;Use the power of choice&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='#onward_i_say'&gt;Onward, I say!&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id='why'&gt;Why?&lt;/h2&gt;

&lt;p&gt;It was my birthday recently. And I&amp;#8217;ve always been a fan of resolutions. I look at them as an opportunity to learn, plan something great, and stick with it.&lt;/p&gt;

&lt;p&gt;Also, posting them here is an incentive to follow through! By all means, remind me of what promised to achieve next year and make me feel bad if it doesn&amp;#8217;t happen :D&lt;/p&gt;

&lt;h2 id='thanks_previous_year'&gt;Thanks, previous year!&lt;/h2&gt;

&lt;p&gt;First, I&amp;#8217;ll take the opportunity to look back on my previous year and what has gone well. Be thankful, yada yada.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Finished my undergraduate education while working an average of 25 hours per week (last two quarters). Thank you, &lt;a href='http://ucsc.edu'&gt;UC Santa Cruz&lt;/a&gt; for having a good CS program and gathering a bunch of smart engineers too. I am truly grateful of all the opportunities UCSC has offered me.&lt;/li&gt;

&lt;li&gt;Learned a &lt;em&gt;ton&lt;/em&gt; about web development, the web in general. I&amp;#8217;m much more confident with the knowledge acquired about my field now. Thank you, Mozilla (mostly webdevs ;) for that. And also thank you, internet!&lt;/li&gt;

&lt;li&gt;Became much more organized and productive. (This is something I look forward to growing even further in the next year.) Thanks to people I&amp;#8217;ve spoken with, a bunch of books I&amp;#8217;ve read and talks I&amp;#8217;ve listened to, as well as one, very interesting seminar at UC Santa Cruz entitled &amp;#8220;Transformative Action&amp;#8221;.&lt;/li&gt;

&lt;li&gt;Traveled to a bunch of places (Romania, Hawaii, Puerto Rico, Miami, Yosemite, etc) which motivated me to make &lt;a href='/list/'&gt;a list&lt;/a&gt;. I am thankful to really good friends (one in particular) without whom I would not have done this!&lt;/li&gt;

&lt;li&gt;Slowly but surely came to a decision about going back to school: will wait for at least one more year before applying to graduate schools. Maybe more.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id='what_now'&gt;What now?&lt;/h2&gt;

&lt;p&gt;For this next year, I&amp;#8217;ve decided to keep it simple. Just &lt;strong&gt;4 concrete actions:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href='#understand_my_place_on_the_web'&gt;Understand my place on the web&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#take_more_risks'&gt;Take more risks&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#take_more_steps_back_think_ahead'&gt;Take more steps back, think ahead&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#use_the_power_of_choice'&gt;Use the power of choice&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id='understand_my_place_on_the_web'&gt;Understand my place on the web&lt;/h3&gt;

&lt;p&gt;Okay, I&amp;#8217;ll be honest - this one is a stretch. How about just understanding it better??&lt;/p&gt;

&lt;p&gt;I know I want to be on the web. What exactly would my role be? What could &lt;strong&gt;&lt;em&gt;I&lt;/em&gt;&lt;/strong&gt; do that would make the most difference and at the same time coincide with my values. For this year, I will probably look at this more from a web developer&amp;#8217;s perspective than anything else.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ultimate goal:&lt;/strong&gt; more confident about the purpose of my contributions to the world.&lt;/p&gt;

&lt;h3 id='take_more_risks'&gt;Take more risks&lt;/h3&gt;

&lt;p&gt;True - this year has had its risks (jumping from a plane, some crazy hikes, other social or work-related acts that were out of my comfort zone), but by and large, I haven&amp;#8217;t taken chances as much as I know I can. I also want to be more confident in my abilities and this will help.&lt;/p&gt;

&lt;p&gt;I want to become more open to risk. Maybe I will try something like &lt;a href='http://sneakylittlefox.tumblr.com/post/2053967413/rejection-therapy-an-introduction'&gt;rejection therapy&lt;/a&gt;. The areas I want to focus on are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;social skillzz - uh, need I say more? computer nerd + social skills = ???&lt;/li&gt;

&lt;li&gt;webdev work - initiative, initiative, initiative&lt;/li&gt;

&lt;li&gt;UX - sometimes I don&amp;#8217;t do as good of a job on UI/UX because I stick with the comfy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Ultimate goal:&lt;/strong&gt; become much more comfortable with failure.&lt;/p&gt;

&lt;h3 id='take_more_steps_back_think_ahead'&gt;Take more steps back, think ahead&lt;/h3&gt;

&lt;p&gt;Getting over-involved in little things can make me forget about what&amp;#8217;s really important. I want to think about the future more and the past less. That&amp;#8217;s what my &lt;a href='http://www.thetimeparadox.com/surveys/ztpi/'&gt;ZTPI&lt;/a&gt; index indicates too ;)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Decide on when I will go back to school&lt;/li&gt;

&lt;li&gt;Elaborate on what I see happening for me in the next 2-5 years (I&amp;#8217;ll be happy with 2, but 5 would be an overachievement :)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Ultimate goal:&lt;/strong&gt; In the words of Brian Tracy and Philip Zimbardo, I want to &lt;em&gt;expand my time perspective&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id='use_the_power_of_choice'&gt;Use the power of choice&lt;/h3&gt;

&lt;p&gt;Choice empowers us. Two things here:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I want to make an active choice when the opportunity arises - instead of, say, passively deferring.&lt;/li&gt;

&lt;li&gt;Say &lt;em&gt;no&lt;/em&gt; more. Much too often I try to be nice and say yes, but time does not permit me to do everything.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Ultimate goal:&lt;/strong&gt; become more realistic about how much I can really do, and stop feeling like a victim sometimes.&lt;/p&gt;

&lt;h2 id='onward_i_say'&gt;Onward, I say!&lt;/h2&gt;

&lt;p&gt;12 months from now, &lt;strong&gt;I will&lt;/strong&gt; report back. Seriously.&lt;/p&gt;

&lt;p&gt;Thanks to everyone who made this year of my life awesome!&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>SUMO and migrating large amounts of data</title>
   <link href="http://embrangler.com/2010/12/migrating-large-amounts-of-data"/>
   <updated>2010-12-03T00:00:00-08:00</updated>
   <id>http://embrangler.com/2010/12/migrating-large-amounts-of-data</id>
   <content type="html">&lt;p&gt;Data migration is a complicated problem. It&amp;#8217;s one of those things nobody wants to do, because it&amp;#8217;s mostly tedious, not engaging, and also important to get right. Often times you have to compromise. I&amp;#8217;ll talk a bit about the history of SUMO&amp;#8217;s data, decisions the product and development team have made regarding its migration, and things I&amp;#8217;ve learned from the experience.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href='#quick_tips'&gt;Quick tips&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='#background'&gt;Background&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='#rewriting_where_to_start'&gt;Data influences which components are rewritten first&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='#too_much_data'&gt;Too much data! What now?&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='#migrating_questions'&gt;Lesson 1: Migrating questions&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#migrating_the_knowledge-base'&gt;Lesson 2: Migrating the knowledge base&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='#can_i_get_away_with_pure_sql'&gt;Can I get away with pure SQL?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='#converting_data'&gt;Converting data: some challenges&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='#data_integrity_and_storage'&gt;Lesson 3: Data integrity and storage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='quick_tips'&gt;Quick tips&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Start with the smallest dataset first to get the hang of things. (&lt;a href='#rewriting_where_to_start'&gt;details&lt;/a&gt;)&lt;/li&gt;

&lt;li&gt;You&amp;#8217;ll have to deal with lots of edge cases. Make sure to write tests. (&lt;a href='#testing'&gt;details&lt;/a&gt;)&lt;/li&gt;

&lt;li&gt;Careful when converting dates/times: timezones can be a pain, and data is often stored in the timezone of the server. (&lt;a href='#converting_data'&gt;details&lt;/a&gt;)&lt;/li&gt;

&lt;li&gt;When you have so much data that migrating it would take days: do you need &lt;em&gt;all&lt;/em&gt; of it? (&lt;a href='#too_much_data'&gt;details&lt;/a&gt;)&lt;/li&gt;

&lt;li&gt;Consider the benefits of migrating data offline (&lt;a href='#migrating_the_knowledge_base'&gt;details&lt;/a&gt;)&lt;/li&gt;

&lt;li&gt;It&amp;#8217;s unlikely that you&amp;#8217;ll be able to use raw SQL. (&lt;a href='#can_i_get_away_with_pure_sql'&gt;details&lt;/a&gt;)&lt;/li&gt;

&lt;li&gt;You&amp;#8217;ll learn how important data integrity is, so you&amp;#8217;ll pay attention at the schema your software uses next time. (&lt;a href='#data_integrity_and_storage'&gt;details&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='background'&gt;Background&lt;/h2&gt;

&lt;p&gt;At the beginning of February, &lt;a href='http://support.mozilla.com'&gt;SUMO&lt;/a&gt; started on a new adventure: rewriting the entire platform from an outdated version of &lt;a href='http://tikiwiki.org/'&gt;TikiWiki&lt;/a&gt; to &lt;a href='http://www.djangoproject.com/'&gt;Django&lt;/a&gt;. As different (more or less stand-alone) pieces of the application were moved over to the new platform, our data had to be migrated over as well.&lt;/p&gt;

&lt;p&gt;Over the course of the past 6 months, I&amp;#8217;ve migrated over 25,000 pieces of content, most of which contained large amounts of text data.&lt;/p&gt;

&lt;h2 id='rewriting_where_to_start'&gt;Rewriting: where to start?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Tip: Start with the smallest, simplest dataset first.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The first migration of data was part of our new &lt;a href='http://support.mozilla.com/en-US/forums'&gt;discussion forums&lt;/a&gt;. This was by far the smallest component we had to migrate over:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;the forums contained roughly 5000 posts, in just about 1000 threads.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;by comparison, we had a total of ~450,000 answers for ~260,000 questions, and over 5,000 knowledge base pages.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://support.mozilla.com/en-US/questions'&gt;questions&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://support.mozilla.com/en-US/kb/Using%20Firefox'&gt;knowledge base, document example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;I had never done migrations before, so starting small was a good idea.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;In addition to being the smallest, the forums content was also more straightforward to migrate (see also &lt;a href='#converting_data'&gt;Converting data&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='too_much_data'&gt;Too much data!!&lt;/h2&gt;

&lt;p&gt;Our questions component had over 450,000 (!) answers in the old system. Should you ever be in this situation, here are some options worth considering:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;do you need all this data? can you keep just a reasonable portion of it?&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;if you don&amp;#8217;t, great! (&lt;a href='#migrating_questions'&gt;details&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;if you &lt;strong&gt;do&lt;/strong&gt;, tough luck. Consider:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;migrating data offline and then running a straighforward SQL import on the production database. (&lt;a href='#migrating_the_knowledge_base'&gt;details&lt;/a&gt;)&lt;/li&gt;

&lt;li&gt;running the conversion script in chunks: migrate a part of the data now, and more later.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='migrating_questions'&gt;Migrating questions&lt;/h3&gt;

&lt;p&gt;Fortunately, even though we had over 260,000 questions to migrate, only about 15,000 were recent enough to be relevant for the currently supported versions of &lt;a href='http://getfirefox.com'&gt;Firefox&lt;/a&gt;. Hence, the development and product teams agreed to &lt;em&gt;not&lt;/em&gt; migrate all of them.&lt;/p&gt;

&lt;p&gt;The script to convert data over was run live on the production server, and took over one hour to finish - not too bad.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Caveat:&lt;/strong&gt; frozen edits to and creation of TikiWiki questions for those a bit over an hour.&lt;/p&gt;

&lt;h3 id='migrating_the_knowledge_base'&gt;Migrating the Knowledge Base&lt;/h3&gt;

&lt;p&gt;The Knowledge base presented a different situation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Between 5,000 and 6,000 articles, some with long-standing history&lt;/li&gt;

&lt;li&gt;Approved and unreviewed versions of an article were stored as separate articles in TikiWiki (each with its own history)&lt;/li&gt;

&lt;li&gt;Lots and lots of content and metadata &lt;em&gt;per document&lt;/em&gt;&lt;/li&gt;

&lt;li&gt;Changing our wiki syntax from &lt;a href='http://tiki.org/tiki-index.php?page=WikiSyntax'&gt;TikiWiki&lt;/a&gt; to &lt;a href='http://www.mediawiki.org/wiki/Help:Formatting'&gt;MediaWiki&lt;/a&gt; (used by &lt;a href='http://www.wikipedia.org/'&gt;Wikipedia&lt;/a&gt;, among many others).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thus, even though the &lt;em&gt;count&lt;/em&gt; was much lower than for forums or questions, migrating these was much more intensive, both CPU and IO-wise.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our solution&lt;/strong&gt; here was to run the script offline (a.k.a. I ran the script on my machine) and hand our IT team just the SQL output to import.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why?&lt;/strong&gt; The script was complex enough to take &lt;em&gt;over 3 hours&lt;/em&gt; from start to finish. Unreasonable to run on our production servers: if something went wrong, it could take an entire workday (or more) for the IT and development team to get things back on track.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Caveat:&lt;/strong&gt; frozen edits to and creation of TikiWiki knowledge base articles for a day.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Huge benefits:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the data migration took less than &lt;strong&gt;5 minutes&lt;/strong&gt; to import on the production database.&lt;/li&gt;

&lt;li&gt;no worrying about a script crashing on untested data&lt;/li&gt;

&lt;li&gt;no overloading the production servers with database queries (replication lag can be an issue)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='can_i_get_away_with_pure_sql'&gt;Can I get away with pure SQL?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Rarely.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Data &lt;strong&gt;changes frequently&lt;/strong&gt; over time.&lt;/li&gt;

&lt;li&gt;Thus, you want to freeze changes for the &lt;strong&gt;minimum possible time&lt;/strong&gt;, so running a script on the production database is the way to go.&lt;/li&gt;

&lt;li&gt;Hence, unless the new schema structure is close enough for raw SQL to handle, you&amp;#8217;re out of luck.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The only time we were able to use pure SQL was when &lt;a href='#migrating_the_knowledge-base'&gt;we froze edits for a day&lt;/a&gt; and generated the SQL offline.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How similar does schema structure have to be for SQL to work?&lt;/strong&gt; you ask.&lt;/p&gt;

&lt;p&gt;Here is the story for our &lt;a href='http://support.mozilla.com/en-US/forums'&gt;forums&lt;/a&gt;, the &lt;strong&gt;simplest schema:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;we kept the general structure of the data: forum with threads as children, and threads with posts as children.&lt;/li&gt;

&lt;li&gt;in TikiWiki, our threads and posts were stored in the same table, with a parentId column distinguishing which are threads and which are posts.&lt;/li&gt;

&lt;li&gt;in Django, threads had their own table (a good &lt;a href='http://en.wikipedia.org/wiki/Database_normalization'&gt;normalization&lt;/a&gt; to have).&lt;/li&gt;

&lt;li&gt;a thread from TikiWiki mapped to a thread + a post in Django&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Because of those (and other) differences, we couldn&amp;#8217;t run a SQL-only import as reliably as a python/PHP conversion script. You could try doing a SQL-only import, but you&amp;#8217;re gonna hit some &lt;strong&gt;key issues you wish SQL could solve:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;while + if/else if/else structures. Much too often, data is corrupted or columns contain unexpected values - &lt;a href='http://dev.mysql.com/doc/refman/5.0/en/control-flow-functions.html#function_if'&gt;MySQL&amp;#8217;s conditional construct&lt;/a&gt; doesn&amp;#8217;t do much.&lt;/li&gt;

&lt;li&gt;colliding unique keys, or integrity errors due to foreign key references are &lt;em&gt;very&lt;/em&gt; difficult to prevent against in SQL.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='converting_data'&gt;Converting data&lt;/h2&gt;

&lt;p&gt;Here are some general observations of problems you might run into when converting data, based on our problems:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Frequently, &lt;strong&gt;normalization&lt;/strong&gt;/denormalization changes are &lt;strong&gt;worth the effort&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;More often than not, normalization is the way to go.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Long-term benefits are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Data integrity a &lt;a href='#data_integrity_and_storage'&gt;&lt;strong&gt;&lt;em&gt;huge issue&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt;

&lt;li&gt;Usually, more flexibility to add functionality later on.&lt;/li&gt;

&lt;li&gt;Easier migration (should you need to do it again).&lt;/li&gt;

&lt;li&gt;&lt;a href='http://lmgtfy.com/?q=benefits+of+normalization'&gt;And more!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Syntax changes&lt;/strong&gt; are &lt;strong&gt;the worst&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you have to change wiki syntax, consider going straight to HTML: this way, you can use the rendered output of the documents from the old platform.&lt;/li&gt;

&lt;li&gt;Can&amp;#8217;t get away with just HTML? Try regex conversion! I&amp;#8217;m not saying that using a proper parser is a bad idea &amp;#8211; but if you have to &lt;strong&gt;write a parser&lt;/strong&gt;, it&amp;#8217;s probably not worth the effort.&lt;/li&gt;

&lt;li&gt;Consider a &lt;a href='http://en.wikipedia.org/wiki/Pushdown_automaton'&gt;simple PDA&lt;/a&gt; instead of a parser, it might just work.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Dates and times are &lt;strong&gt;timezone-sensitive&lt;/strong&gt;. When converting, make sure to test that you&amp;#8217;re taking timezones into account.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In our case, we were moving over from a basically timezone-ignorant platform (as many PHP applications are), to a timezone-sensitive application (Django).&lt;/li&gt;

&lt;li&gt;Some columns were integers (&lt;a href='http://en.wikipedia.org/wiki/Unix_time'&gt;UNIX timestamps&lt;/a&gt;), which are universally based on UTC, and so less tricky to convert. MySQL&amp;#8217;s &lt;a href='http://dev.mysql.com/doc/refman/5.1/en/date-and-time-functions.html#function_from-unixtime'&gt;FROM_UNIXTIME&lt;/a&gt; can be useful here.&lt;/li&gt;

&lt;li&gt;Others were mysql dates/datetimes/timestamps, recorded at the server&amp;#8217;s timezone (for us, US/Pacific, or PDT).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Be prepared for &lt;strong&gt;lots and lots of edge cases:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Syntax changes are a nightmare of edge cases, as the old syntax probably has different rules and a different parser than the new one. One common problem for us was whitespace handling.&lt;/li&gt;

&lt;li&gt;If foreign keys were not (well) enforced in the old system, there will be numerous exceptions to catch in the new one.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='data_integrity_and_storage'&gt;Data integrity and storage&lt;/h3&gt;

&lt;p&gt;One of the most valuable lessons to learn from migrating data is &lt;a href='http://en.wikipedia.org/wiki/Data_integrity'&gt;integrity&lt;/a&gt;. Another one is storing data properly encoded and consistently. I&amp;#8217;ll highlight just a few things that help with respect to data migration:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use foreign keys and any other constraints as much as technically accurate&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;E.g. you will have fewer exceptions to handle if you can rely on foreign keys to refer to valid rows&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Storing text in one encoding is better than multiple; preferably unicode.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Store dates and times in the same timezone; preferably UTC.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Use a database that &lt;a href='http://coffeeonthekeyboard.com/django-fixtures-with-circular-foreign-keys-480/'&gt;supports deferred foreign key checks&lt;/a&gt;, and is generally better about &lt;a href='http://en.wikipedia.org/wiki/ACID'&gt;ACID&lt;/a&gt;. That&amp;#8217;s not MySQL.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='testing'&gt;Testing&lt;/h2&gt;

&lt;p&gt;Although testing some temporary code that you&amp;#8217;ll use once may seem like a waste, if you&amp;#8217;re dealing with large amounts of data that can change, you will be better off writing tests.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cover the basics - migrating a typical piece of content.&lt;/li&gt;

&lt;li&gt;Cover some, if not all of the edge cases.&lt;/li&gt;

&lt;li&gt;(somewhat related to testing) Write some helper scripts (e.g. bash) to make it easy to run the migration and spot check.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I worked on migrating the Knowledge Base over several weeks, and sometimes changes I made to the script broke tests &amp;#8211; if it wasn&amp;#8217;t for those tests, lots of content could have been migrated poorly, or not at all.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Python debugging (pdb) - quick tip</title>
   <link href="http://embrangler.com/2010/09/python-debugging-pdb---quick-tip"/>
   <updated>2010-09-30T00:00:00-07:00</updated>
   <id>http://embrangler.com/2010/09/python-debugging-pdb---quick-tip</id>
   <content type="html">&lt;p&gt;Sometimes you want to use multiple breakpoints like so:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='c'&gt;# some function/file...&lt;/span&gt;
&lt;span class='kn'&gt;import&lt;/span&gt; &lt;span class='nn'&gt;pdb&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='n'&gt;pdb&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;set_trace&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
&lt;span class='n'&gt;some_python_code_on_one_line&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;

&lt;span class='c'&gt;# some other function/file...&lt;/span&gt;
&lt;span class='kn'&gt;import&lt;/span&gt; &lt;span class='nn'&gt;pdb&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='n'&gt;pdb&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;set_trace&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
&lt;span class='n'&gt;some_other_python_code_on_one_line&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;I personally get lost sometimes, tracking through many files and having to read the method name and remember where exactly it is. So it can help me keep track if I leave myself a message:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='c'&gt;# some function/file...&lt;/span&gt;
&lt;span class='kn'&gt;import&lt;/span&gt; &lt;span class='nn'&gt;pdb&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='n'&gt;pdb&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;set_trace&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
&lt;span class='n'&gt;s&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='s'&gt;&amp;#39;Some function/file&amp;#39;&lt;/span&gt;
&lt;span class='n'&gt;some_python_code_on_one_line&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;

&lt;span class='c'&gt;# some other function/file...&lt;/span&gt;
&lt;span class='kn'&gt;import&lt;/span&gt; &lt;span class='nn'&gt;pdb&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='n'&gt;pdb&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;set_trace&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
&lt;span class='n'&gt;s&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='s'&gt;&amp;#39;Some other function/file&amp;#39;&lt;/span&gt;
&lt;span class='n'&gt;some_other_python_code_on_one_line&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;In some cases (when running django on my mac, for example), I can even do this:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='c'&gt;# some function/file...&lt;/span&gt;
&lt;span class='kn'&gt;import&lt;/span&gt; &lt;span class='nn'&gt;pdb&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='n'&gt;pdb&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;set_trace&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
&lt;span class='sd'&gt;&amp;quot;&amp;quot;&amp;quot;Some function/file&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class='n'&gt;some_python_code_on_one_line&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&amp;#8230; so it actually looks like a bit cleaner, like a comment.&lt;/p&gt;

&lt;p&gt;So instead of:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='o'&gt;&amp;gt;&lt;/span&gt; &lt;span class='o'&gt;/&lt;/span&gt;&lt;span class='n'&gt;path&lt;/span&gt;&lt;span class='o'&gt;/&lt;/span&gt;&lt;span class='n'&gt;to&lt;/span&gt;&lt;span class='o'&gt;/&lt;/span&gt;&lt;span class='n'&gt;some&lt;/span&gt;&lt;span class='o'&gt;/&lt;/span&gt;&lt;span class='nb'&gt;file&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;py&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='c'&gt;##)method()&lt;/span&gt;
&lt;span class='o'&gt;-&amp;gt;&lt;/span&gt; &lt;span class='n'&gt;some_python_code_on_one_line&lt;/span&gt;
&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;Pdb&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;You see:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;    &lt;span class='o'&gt;&amp;gt;&lt;/span&gt; &lt;span class='o'&gt;/&lt;/span&gt;&lt;span class='n'&gt;path&lt;/span&gt;&lt;span class='o'&gt;/&lt;/span&gt;&lt;span class='n'&gt;to&lt;/span&gt;&lt;span class='o'&gt;/&lt;/span&gt;&lt;span class='n'&gt;some&lt;/span&gt;&lt;span class='o'&gt;/&lt;/span&gt;&lt;span class='nb'&gt;file&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;py&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='c'&gt;##)some_function()&lt;/span&gt;
    &lt;span class='o'&gt;-&amp;gt;&lt;/span&gt; &lt;span class='n'&gt;s&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='s'&gt;&amp;#39;Some function/file&amp;#39;&lt;/span&gt;
    &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;Pdb&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Hope that helps someone.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Django and AJAX image uploads</title>
   <link href="http://embrangler.com/2010/08/ajax-uploads-images-in-django"/>
   <updated>2010-08-20T00:00:00-07:00</updated>
   <id>http://embrangler.com/2010/08/ajax-uploads-images-in-django</id>
   <content type="html">&lt;p&gt;Table of contents:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href='#demo'&gt;Demo&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='#summary'&gt;Summary&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='#server_side_django'&gt;Server side (Django)&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='#model'&gt;Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#form'&gt;Form&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#view_uploading_image_saving_to_disk'&gt;View&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='#generating_the_thumbnail_with_pil'&gt;Generating the thumbnail with PIL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='#client_side'&gt;Client side&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='#a_note_about_graceful_degradation'&gt;Graceful degradation&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='demo'&gt;Demo&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href='http://screencast.com/t/ZGI0NTA3'&gt;Screencast&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Screenshots:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The upload form, empty and ready for action: &lt;div class='img-wrap'&gt;&lt;div class='img'&gt;
  &lt;img title='Empty upload form' src='/images/upload/upload_1.png' alt='Empty upload form' /&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Browsing for an image: &lt;div class='img-wrap'&gt;&lt;div class='img'&gt;
  &lt;img title='Browsing for an image' src='/images/upload/upload_2.png' alt='Browsing for an image' /&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Uploading the image (in progress): &lt;div class='img-wrap'&gt;&lt;div class='img'&gt;
  &lt;img title='Uploading the image' src='/images/upload/upload_3.png' alt='Uploading the image' /&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;The image is uploaded: &lt;div class='img-wrap'&gt;&lt;div class='img'&gt;
  &lt;img title='Uploaded image' src='/images/upload/upload_4.png' alt='Uploaded image' /&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Deleting the image would show a similar progress block as uploading: &lt;div class='img-wrap'&gt;&lt;div class='img'&gt;
  &lt;img title='Delete the image' src='/images/upload/upload_5.png' alt='Delete the image' /&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='summary'&gt;Summary&lt;/h2&gt;

&lt;p&gt;In this post, we&amp;#8217;ll go through how to get AJAX uploads to work with Django, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://en.wikipedia.org/wiki/Cross-site_request_forgery'&gt;csrf protection&lt;/a&gt; with &lt;a href='http://docs.djangoproject.com/en/dev/topics/forms/'&gt;Django&amp;#8217;s forms&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://en.wikipedia.org/wiki/Graceful_degradation'&gt;graceful degradation&lt;/a&gt; (see also &lt;a href='http://en.wikipedia.org/wiki/Unobtrusive_JavaScript'&gt;unobtrusive JavaScript&lt;/a&gt;)&lt;/li&gt;

&lt;li&gt;&lt;a href='http://docs.djangoproject.com/en/dev/topics/http/file-uploads/'&gt;uploading files in Django&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;thumbnail generation with &lt;a href='http://www.pythonware.com/products/pil/'&gt;PIL&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;cross-browser uploading of files through AJAX&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I&amp;#8217;m planning to add upload progress. If you can&amp;#8217;t wait for that post (understandably), there are several ways to go about it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If your site isn&amp;#8217;t using multiple webheads, you can just ask the webhead to get you the size of what&amp;#8217;s been uploaded so far. Since Django can read in chunks, it can tell you how much has been processed. See &lt;a href='http://fairviewcomputing.com/blog/2008/10/21/ajax-upload-progress-bars-jquery-django-nginx/'&gt;this post&lt;/a&gt; for implementation ideas.&lt;/li&gt;

&lt;li&gt;Or, regardless of the server setup, you can use the File API (in Firefox and Chrome) - easier, cleaner, no server-side interaction required.&lt;/li&gt;

&lt;li&gt;Other multi-webhead approaches: writing progress to a file shared among them, or saving directly to a shared folder and e.g. returning the size uploaded so far.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='server_side_django'&gt;Server side (Django)&lt;/h2&gt;

&lt;p&gt;First, we&amp;#8217;ll look at how the server handles files sent to it.&lt;/p&gt;

&lt;h3 id='model'&gt;Model&lt;/h3&gt;

&lt;p&gt;I created an app called &lt;code&gt;upload&lt;/code&gt; with an ImageAttachment model, like so:&lt;/p&gt;

&lt;p&gt;&lt;a href='http://github.com/pcraciunoiu/kitsune/blob/466b65ad885118f0fb8d14f706ea9efa21f49edd/apps/upload/models.py'&gt;apps/upload/models.py&lt;/a&gt;:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='kn'&gt;from&lt;/span&gt; &lt;span class='nn'&gt;django.conf&lt;/span&gt; &lt;span class='kn'&gt;import&lt;/span&gt; &lt;span class='n'&gt;settings&lt;/span&gt;
&lt;span class='kn'&gt;from&lt;/span&gt; &lt;span class='nn'&gt;django.contrib.auth.models&lt;/span&gt; &lt;span class='kn'&gt;import&lt;/span&gt; &lt;span class='n'&gt;User&lt;/span&gt;
&lt;span class='kn'&gt;from&lt;/span&gt; &lt;span class='nn'&gt;django.contrib.contenttypes.models&lt;/span&gt; &lt;span class='kn'&gt;import&lt;/span&gt; &lt;span class='n'&gt;ContentType&lt;/span&gt;
&lt;span class='kn'&gt;from&lt;/span&gt; &lt;span class='nn'&gt;django.contrib.contenttypes&lt;/span&gt; &lt;span class='kn'&gt;import&lt;/span&gt; &lt;span class='n'&gt;generic&lt;/span&gt;
&lt;span class='kn'&gt;from&lt;/span&gt; &lt;span class='nn'&gt;django.db&lt;/span&gt; &lt;span class='kn'&gt;import&lt;/span&gt; &lt;span class='n'&gt;models&lt;/span&gt;


&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;ImageAttachment&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;models&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Model&lt;/span&gt;&lt;span class='p'&gt;):&lt;/span&gt;
    &lt;span class='sd'&gt;&amp;quot;&amp;quot;&amp;quot;A tag on an item.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class='nb'&gt;file&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;models&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;ImageField&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;upload_to&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='n'&gt;settings&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;IMAGE_UPLOAD_PATH&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='n'&gt;thumbnail&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;models&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;ImageField&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;upload_to&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='n'&gt;settings&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;THUMBNAIL_UPLOAD_PATH&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='n'&gt;creator&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;models&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;ForeignKey&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;User&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;related_name&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='s'&gt;&amp;#39;image_attachments&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='n'&gt;content_type&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;models&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;ForeignKey&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;ContentType&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='n'&gt;object_id&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;models&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;PositiveIntegerField&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;

    &lt;span class='n'&gt;content_object&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;generic&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;GenericForeignKey&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;

    &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;__unicode__&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='bp'&gt;self&lt;/span&gt;&lt;span class='p'&gt;):&lt;/span&gt;
        &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='bp'&gt;self&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;file&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;This represents an image attached to a piece of content (using a generic foreign key). Pretty basic stuff. The form is ridiculously simple:&lt;/p&gt;

&lt;h3 id='form'&gt;Form&lt;/h3&gt;

&lt;p&gt;&lt;a href='http://github.com/pcraciunoiu/kitsune/blob/466b65ad885118f0fb8d14f706ea9efa21f49edd/apps/upload/forms.py'&gt;apps/upload/forms.py&lt;/a&gt;:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='kn'&gt;from&lt;/span&gt; &lt;span class='nn'&gt;django&lt;/span&gt; &lt;span class='kn'&gt;import&lt;/span&gt; &lt;span class='n'&gt;forms&lt;/span&gt;


&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;ImageUploadForm&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;forms&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;Form&lt;/span&gt;&lt;span class='p'&gt;):&lt;/span&gt;
    &lt;span class='sd'&gt;&amp;quot;&amp;quot;&amp;quot;Image upload form.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class='n'&gt;image&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;forms&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;ImageField&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id='view_uploading_image_saving_to_disk'&gt;View (uploading image, saving to disk)&lt;/h3&gt;

&lt;p&gt;The view is a bit more complicated, so I won&amp;#8217;t go into the details. But you can &lt;a href='http://github.com/pcraciunoiu/kitsune/blob/466b65ad885118f0fb8d14f706ea9efa21f49edd/apps/upload'&gt;have a look at the entire app&lt;/a&gt; and &lt;a href='#footer'&gt;contact me&lt;/a&gt; if you have questions. Basically, the view does the file upload as you see in &lt;a href='http://docs.djangoproject.com/en/dev/topics/http/file-uploads/'&gt;Django&amp;#8217;s documentation&lt;/a&gt;. The function &lt;a href='http://github.com/pcraciunoiu/kitsune/blob/466b65ad885118f0fb8d14f706ea9efa21f49edd/apps/upload/utils.py#L9'&gt;&lt;code&gt;create_image_attachment&lt;/code&gt;&lt;/a&gt; deals with the part about saving a file to disk.&lt;/p&gt;

&lt;h3 id='generating_the_thumbnail_with_pil'&gt;Generating the thumbnail with PIL&lt;/h3&gt;

&lt;p&gt;There is also a task for generating thumbnails, which is offloaded from the web server thread to improve performance. If you don&amp;#8217;t need that, you can just call generate_thumbnail directly, it&amp;#8217;s defined &lt;a href='http://github.com/pcraciunoiu/kitsune/blob/466b65ad885118f0fb8d14f706ea9efa21f49edd/apps/upload/tasks.py'&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id='client_side'&gt;Client side&lt;/h2&gt;

&lt;p&gt;Now, the magical JavaScript!&lt;/p&gt;

&lt;p&gt;We&amp;#8217;re using jQuery on &lt;a href='http://support.mozilla.com'&gt;SUMO&lt;/a&gt;, so I wrote two jQuery extensions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;jQuery.fn.ajaxSubmitInput(options) &amp;#8211; wraps an &lt;code&gt;&amp;lt;input type=&amp;quot;file&amp;quot;&amp;gt;&lt;/code&gt; in a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; and creates an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; to which that form posts. To get around Django&amp;#8217;s csrf protection, it also copies the &lt;code&gt;csrfmiddlewaretoken&lt;/code&gt; hidden input into the form. You can&amp;#8217;t clone a file input for security reasons (nor can you change or access its value), so you need to wrap it in a form.&lt;/li&gt;

&lt;li&gt;jQuery.fn.wrapDeleteInput(options) &amp;#8211; wraps an &lt;code&gt;input&amp;lt;type=&amp;quot;submit&amp;quot;&amp;gt;&lt;/code&gt; in a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; and creates an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; to which that form posts.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These two pretty much summarize the process:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;when the user changes the value of the file input, post the form&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;show some progress while the file is uploading&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;once the file is done uploading, show a thumbnail of the image&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;also create the delete input and wrap it in the form using &lt;code&gt;wrapDeleteInput()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;when the user clicks on the delete button, post the action&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;show some progress while the file is being deleted&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id='a_note_about_graceful_degradation'&gt;A note about graceful degradation&lt;/h2&gt;

&lt;p&gt;To degrade gracefully, you want to post the file input to whatever view you&amp;#8217;re including it to. And you can just do something like:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='python'&gt;&lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;some_view&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;request&lt;/span&gt;&lt;span class='p'&gt;):&lt;/span&gt;
    &lt;span class='c'&gt;# ...&lt;/span&gt;
    &lt;span class='c'&gt;# NOJS: upload image&lt;/span&gt;
    &lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='s'&gt;&amp;#39;upload_image&amp;#39;&lt;/span&gt; &lt;span class='ow'&gt;in&lt;/span&gt; &lt;span class='n'&gt;request&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;POST&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt;
        &lt;span class='n'&gt;upload_images&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;request&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;obj&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='c'&gt;# ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Thanks for reading, hope it helps!&lt;/p&gt;</content>
 </entry>
 
 
</feed>